version: "3.8"

services:
  # 1) Base de datos
  db:
    image: mysql:8.0
    container_name: kartingrm-db
    environment:
      MYSQL_ROOT_PASSWORD: "Ignacito1."
      MYSQL_DATABASE: "kartingrm_db"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      ge-network:
        aliases:
          - db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2) Backend (se construye desde tu código)
  backend-app:
    build:
      context: ../KartingRM
      dockerfile: Dockerfile
    image: ignacioavila23/kartingrm:latest
    environment:
      SPRING_DATASOURCE_URL:      "jdbc:mysql://db:3306/kartingrm_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true"
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "Ignacito1."
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - ge-network

  # 3) Frontend (se construye desde tu código)
  front-app:
    build:
      context: ../KartingRMFront/karting-frontend
      dockerfile: Dockerfile
    image: ignacioavila23/karting-frontend:latest
    depends_on:
      - backend-app
    networks:
      - ge-network

  # 4) Load-balancer del backend
  backend-lb:
    image: nginx:alpine
    container_name: backend-lb
    ports:
      - "8010:80"
    volumes:
      - ./nginx/backend.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend-app
    networks:
      - ge-network

  # 5) Load-balancer del frontend
  front-lb:
    image: nginx:alpine
    container_name: front-lb
    ports:
      - "8070:80"
    volumes:
      - ../KartingRMFront/karting-frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - front-app
    networks:
      - ge-network

networks:
  ge-network:
    driver: bridge

volumes:
  mysql-data:
